<!--
  ~  Copyright 2000-2011 JetBrains s.r.o.
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<idea-plugin url="http://confluence.jetbrains.net/display/IDEADEV/Gradle+integration">
  <name>Gradle</name>
  <id>org.jetbrains.plugins.gradle</id>
  <vendor>JetBrains</vendor>
  <description>Gradle integration</description>

  <depends>com.intellij.modules.lang</depends>
  <depends>org.intellij.groovy</depends>

  <extensions defaultExtensionNs="com.intellij">
    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <projectImportProvider implementation="org.jetbrains.plugins.gradle.manage.GradleProjectImportProvider"/>
    <projectImportBuilder implementation="org.jetbrains.plugins.gradle.manage.GradleProjectImportBuilder"/>
    <projectConfigurable instance="org.jetbrains.plugins.gradle.config.GradleConfigurable" id="reference.settingsdialog.project.gradle"
                         key="gradle.name" bundle="i18n.GradleBundle"/>
    <library.presentationProvider implementation="org.jetbrains.plugins.gradle.config.GradleLibraryPresentationProvider" order="last"/>
    <java.elementFinder implementation="org.jetbrains.plugins.gradle.config.GradleClassFinder"/>
    <projectOpenProcessor implementation="org.jetbrains.plugins.gradle.manage.GradleProjectOpenProcessor"/>
    <colorAndFontPanelFactory implementation="org.jetbrains.plugins.gradle.config.GradleColorAndFontPanelFactory"/>
    <colorAndFontDescriptorProvider implementation="org.jetbrains.plugins.gradle.config.GradleColorAndFontDescriptorsProvider"/>
    <postStartupActivity implementation="org.jetbrains.plugins.gradle.sync.GradleStartupActivity"/>

    <!--Structure diff calculators-->
    <applicationService serviceInterface="org.jetbrains.plugins.gradle.diff.GradleStructureChangesCalculator"
                        serviceImplementation="org.jetbrains.plugins.gradle.diff.project.GradleProjectStructureChangesCalculator"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.diff.module.GradleModuleStructureChangesCalculator"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.diff.contentroot.GradleContentRootStructureChangesCalculator"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.diff.dependency.GradleModuleDependencyStructureChangesCalculator"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.diff.library.GradleLibraryStructureChangesCalculator"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.diff.dependency.GradleLibraryDependencyStructureChangesCalculator"/>
    
    <!--Import services-->
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.manage.GradleModuleManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.manage.GradleLibraryManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.manage.GradleJarManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.manage.GradleContentRootManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.manage.GradleDependencyManager"/>

    <!--Generic application services-->
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.remote.GradleApiFacadeManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.util.GradleInstallationManager"/>
    <applicationService serviceInterface="org.jetbrains.plugins.gradle.notification.GradleProgressNotificationManager"
                        serviceImplementation="org.jetbrains.plugins.gradle.notification.GradleProgressNotificationManagerImpl"/>
    <applicationService serviceInterface="org.jetbrains.plugins.gradle.config.PlatformFacade"
                        serviceImplementation="org.jetbrains.plugins.gradle.config.PlatformFacadeImpl"/>
    
    <!--Conflict UI components-->
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.sync.conflict.GradleConflictControlFactory"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.sync.conflict.GradleProjectConflictControlFactory"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.gradle.sync.conflict.GradleCommonDependencyConflictControlFactory"/>

    <projectService serviceImplementation="org.jetbrains.plugins.gradle.config.GradleSettings"/>
    <projectService serviceImplementation="org.jetbrains.plugins.gradle.config.GradleLocalSettings"/>

    <toolWindow id="JetGradle" anchor="right" icon="GradleIcons.ToolWindowGradle"
                factoryClass="org.jetbrains.plugins.gradle.ui.GradleToolWindowFactory"/>
  </extensions>

  <extensions defaultExtensionNs="org.intellij.groovy">
    <positionManagerDelegate implementation="org.jetbrains.plugins.gradle.config.GradlePositionManager"/>
    <scriptTypeDetector implementation="org.jetbrains.plugins.gradle.config.GradleScriptTypeDetector"/>
    <defaultImportContributor implementation="org.jetbrains.plugins.gradle.config.GradleDefaultImportContributor"/>
    <groovyFrameworkConfigNotification implementation="org.jetbrains.plugins.gradle.config.GradleGroovyConfigNotification"/>
  </extensions>

  <project-components>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.sync.GradleProjectStructureChangesModel</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.sync.GradleProjectStructureHelper</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.model.id.GradleEntityIdMapper</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.util.GradleProjectStructureContext</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.manage.GradleLocalNodeManageHelper</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.sync.GradleProjectStructureChangesDetector</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.notification.GradleConfigNotificationManager</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.gradle.task.GradleTaskManager</implementation-class>
    </component>
  </project-components>
  
  <actions>
    
    <!-- Tool window toolbar actions -->
    <action id="Gradle.LinkToProject" class="org.jetbrains.plugins.gradle.action.GradleLinkToProjectAction"/>
    <action id="Gradle.RefreshProject" class="org.jetbrains.plugins.gradle.action.GradleRefreshProjectAction" icon="AllIcons.Actions.Refresh"/>
    <action id="Gradle.OpenScript" class="org.jetbrains.plugins.gradle.action.GradleOpenScriptAction" icon="GradleIcons.GradleNavigate"/>
    <action id="Gradle.Help.ToolWindow" class="org.jetbrains.plugins.gradle.action.GradleToolWindowHelpAction" icon="AllIcons.Actions.Help"/>
    <group id="Gradle.ChangeActionsToolbar">
      <reference id="Gradle.RefreshProject"/>
      <reference id="Gradle.OpenScript"/>
      <reference id="Gradle.Help.ToolWindow"/>
    </group>

    <!-- 'Sync project structure' tree nodes actions -->
    <action id="Gradle.ImportEntity" class="org.jetbrains.plugins.gradle.action.GradleImportEntityAction" icon="GradleIcons.GradleImport"/>
    <action id="Gradle.ShowConflict" class="org.jetbrains.plugins.gradle.action.GradleShowConflictDetailsAction" icon="AllIcons.Actions.Diff"/>
    <action id="Gradle.RemoveEntity" class="org.jetbrains.plugins.gradle.action.GradleRemoveIdeEntityAction" icon="AllIcons.General.Remove"/>
    <group id="Gradle.SyncTreeGroup">
      <reference id="Gradle.ImportEntity"/>
      <reference id="Gradle.RemoveEntity"/>
      <reference id="Gradle.ShowConflict"/>
    </group>

    <!-- 'Sync project structure' tree filters -->
    <action id="Gradle.SyncTreeFilter.None" class="org.jetbrains.plugins.gradle.action.GradleResetTreeFiltersAction"/>
    <action id="Gradle.SyncTreeFilter.GradleLocal" class="org.jetbrains.plugins.gradle.action.GradleLocalSyncTreeFilterAction"/>
    <action id="Gradle.SyncTreeFilter.IntellijLocal" class="org.jetbrains.plugins.gradle.action.IntellijLocalSyncTreeFilterAction"/>
    <action id="Gradle.SyncTreeFilter.Conflict" class="org.jetbrains.plugins.gradle.action.GradleConflictSyncTreeFilterAction"/>
    <action id="Gradle.SyncTreeFilter.Confirmed" class="org.jetbrains.plugins.gradle.action.GradleConfirmedSyncTreeFilterAction"/>
    <group id="Gradle.SyncTreeFilter">
      <reference id="Gradle.SyncTreeFilter.GradleLocal"/>
      <reference id="Gradle.SyncTreeFilter.IntellijLocal"/>
      <reference id="Gradle.SyncTreeFilter.Conflict"/>
      <!--<reference id="Gradle.SyncTreeFilter.Confirmed"/>-->
      <reference id="Gradle.SyncTreeFilter.None"/>
    </group>
    
    <action id="Gradle.RebuildChangesTree" class="org.jetbrains.plugins.gradle.action.GradleRebuildStructureChangesTreeAction"/>
  </actions>
  
</idea-plugin>
